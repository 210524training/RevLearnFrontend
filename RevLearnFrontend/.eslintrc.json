{
  "env": {
      "node": true,
      "es2021": true,
      "jest": true,
      "react-native/react-native": true
  },
  "extends": [
      "airbnb-base"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
      "ecmaVersion": 12,
      "sourceType": "module",
      "ecmaFeatures": {
        "jsx": true,
        "tsx": true
      }
  },
  "plugins": [
      "@typescript-eslint",
      "react",
      "react-native"
  ],
  "rules": {
      "max-len": "off",
      
      "no-use-before-define": "off",
      "newline-per-chained-call": "off",
      "@typescript-eslint/no-use-before-define": ["error"],
      "import/extensions": [
          "error",
          "ignorePackages",
          {
              "ts": "never",
              "tsx": "never"
          }
        
      ],
      "import/prefer-default-export": "warn",
      "lines-between-class-members": "off",
      "key-spacing": ["error", { "beforeColon": false, "afterColon": true }],
      "@typescript-eslint/object-curly-spacing": ["error", "always"],
      "no-useless-constructor": "off",
      "@typescript-eslint/no-useless-constructor": "error",
      "keyword-spacing": [
          "error",
          {
              "overrides": {
                  "if": {
                      "after": false
                  },
                  "for": {
                      "after": false
                  },
                  "while": {
                      "after": false
                  },
                  "catch": {
                      "after": false
                  }
              }
          }
      ],
      "@typescript-eslint/no-explicit-any": "off",
      "linebreak-style": "off",
      "no-console": "off",
      // To resolves issues with enums in TypeScript
      "no-shadow": "off",
      "@typescript-eslint/no-shadow": ["error"],
      "indent": [
          "error",
          2
      ],
      "quotes": [
          "error",
          "single"
      ],
      "semi": [
          "error",
          "always"
      ],
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": "warn",
      "no-empty-function": "off",
      "@typescript-eslint/no-empty-function": "error",
      "consistent-return": "off",
      "no-restricted-syntax": "off",
      "no-else-return": "off"
      
  },
  "settings": {
      "import/resolver": {
          "node": {
              "extensions": [".js", ".ts", ".tsx", ".jsx"]
          }
      }
  }
}

